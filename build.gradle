plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator' version '7.3.0'
}

group = 'com.viswateja'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.21'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	runtimeOnly 'com.h2database:h2'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'


}


tasks.named('test') {
	useJUnitPlatform()
}

compileJava.dependsOn 'openApiGenerate'
sourceSets.main.java.srcDir "$buildDir/generated/src/main/java"

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/portfolio.yaml".toString()
	outputDir = "$buildDir/generated".toString()
	apiPackage = "com.viswateja.portfolio.api"
	modelPackage = "com.viswateja.portfolio.model"
	invokerPackage = "com.viswateja.portfolio.invoker"
	configOptions = [
			interfaceOnly: "true",
			useTags: "true",
			useJakartaEe: "true"
	]
}

